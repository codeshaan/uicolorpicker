What are react lifecycle methods ?

React lifecycle methods are series events that happens from the birth of the component to the death of the component.

component lifecycle => 

mounting (birth of component) => updating (growth of component) => unmounting (death of the component)

Common react lifecycle methods.......


                  ===============
                    Mounting 
                  ===============

*** constructor() *** 
====================
* The constructor method is called before anything else, when the 
  component is initiated, and it is the natural place to set up the initial state and other initial values.

* The constructor method is called with the props, as arguments, 
  and you should always start by calling the super(props) before anything else, this will initiate the parent's constructor method and allows the component to inherit method from its parent.






*** getDerivedStateFromProps ***
=====================================

* The getDerivedStateFromProps() method is called right before
  rendering the elements in the DOM.

* This is the natural place to set the state object based on 
  the initial props.

* It takes state as an argument, and returns an object with changes to the state

* This lifecycle method will take props from the parent component
  and will update the current component's state based on those
  props.

* This whole process happens before the rendering of the
  component in the UI.

* This lifecycle method can also add new items in the state of 
  the child component.









*** render() *** 
====================


* Mostly used lifecycle method
* The only required method that a class component must have
* Handles the rendering of the component to the UI while mounting & updating
* Render() is a pure method, i.e we cannot modify the state (using setState()) inside a render() method
* Pure functions are those which do not have any side effects to the props or the state.











*** componentDidMount() *** 
================================

* When the component is mounted by the render() method, this lifecycle
  method comes into play. 

* componentDidMount() is called as soon as the component is mounted and is
  ready. This is a good place to initiate API calls.

* Unlike the render() method, componentDidMount() allows the use 
  of setState(). Calling the setState() here will update the state 
  and will cause another rendering but it will happen before the 
  browser updates the UI. This is to ensure that the user will not
  see any UI updates with double rendering.


Hierarchy =
constructor() - getDerivedStateFromProps() - render() - componentDidMount().





                    ==============
                      updating
                    ==============
* A commponent is updated whenever there is a change in the
  components's state or props.






*** componentDidUpdate() *** 
================================

* This lifecycle method is invoked as soon as the updating happens. 
  The most common use of this method is to use this in case when the 
  component has been updated. (in response to props or state changes)

* When the state or props changes this method is invoked. No matter 
  where in the class the component has been updated

* It takes a parameter previousProps to compare the current props with the 
  new props & make necessary decisions.
  

*** componentWillUnmount() ***
==================================

* This lifecycle method is called just before the component is unmounted and destroyed.
* This would be the right spot for any type of cleaning action being done.
* We can clear cache, remove eventListeners, or may be cancel API calls.
* In short, this method is used for any cleanup activity.

